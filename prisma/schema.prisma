// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

generator default {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Review {
  id      Int    @id @default(autoincrement())
  title   String @unique
  content String
  userId  Int    @map("user_id")
  user    User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("reviews")
}

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique
  password        String
  role            Role             @default(Reviewer)
  reviews         Review[]
  refreshSessions RefreshSession[]

  @@map("users")
}

enum Role {
  Reviewer
  Manager
}

model RefreshSession {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String   @unique @default(uuid()) @map("refresh_token")
  ua           String
  fingerprint  String
  ip           String
  expiresIn    Int      @map("expires_in")
  createdAt    DateTime @default(now()) @map("created_at")

  @@unique([userId, ip, ua, fingerprint])
  @@map("refresh_sessions")
}
